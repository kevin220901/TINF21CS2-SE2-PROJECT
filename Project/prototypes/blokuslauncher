#!/usr/bin/python3


import logging
import threading
from networking import NetworkClient, NetworkConst, NetworkEvent

#nc.send(NetworkEvent.MESSAGE, {'from':'me', 'message':'ELLOOOO'})
#nc.send(NetworkEvent.MESSAGE, {'from':'me', 'message':'ELLOOOO'})
#nc.send(NetworkEvent.MESSAGE, {'from':'me', 'message':'ELLOOOO'})


#!/usr/bin/env python
import PySimpleGUI as sg

'''
A chatbot with history
Scroll up and down through prior commands using the arrow keys
Special keyboard keys:
    Up arrow - scroll up in commands
    Down arrow - scroll down in commands
    Escape - clear current command
    Control C - exit form
'''

def network_handler_thread(network:NetworkClient, window:sg.Window, networkStoppedEvent:threading.Event):
    while not networkStoppedEvent.is_set():
        recieved = network.read()

        if recieved:
            window.write_event_value('NETWORK', recieved)

    pass

def ChatBotWithHistory():
    # -------  Make a new Window  ------- #s
    # give our form a spiffy set of colors

    sg.theme('GreenTan')

    layout =[
                [sg.Text('Your output will go here', size=(40, 1))],
                [sg.Output(size=(127, 30), font=('Helvetica 10'), key='output')],
                [sg.Text('Command History'), sg.Text('', size=(20, 3), key='history')],
                [sg.Button('CREATE')],
                [sg.Button('JOIN')],
                [
                    sg.ML(size=(85, 5), enter_submits=True, key='query', do_not_clear=False),
                    sg.Button('SEND', button_color=(sg.YELLOWS[0], sg.BLUES[0]), bind_return_key=True),
                    sg.Button('EXIT', button_color=(sg.YELLOWS[0], sg.GREENS[0]))
                ]
            ]

    window = sg.Window('Chat window with history', layout,
                       default_element_size=(30, 2),
                       font=('Helvetica', ' 13'),
                       default_button_element_size=(8, 2),
                       return_keyboard_events=True)

    # ---===--- Loop taking in user input and using it  --- #
    command_history = []
    history_offset = 0
    output = []
    
    nc = NetworkClient(NetworkConst.HOST, NetworkConst.PORT)

    networkStopEvent = threading.Event()
    thread = threading.Thread(target=network_handler_thread, args=(nc, window, networkStopEvent))
    thread.daemon = True
    thread.start()
    


    while True:
        event, value = window.read()
        
        if event == 'CREATE':
            nc.createLobby('ddt')
        elif event == 'JOIN':
            nc.joinLobby('ddt')
        elif event == 'NETWORK':
            output.append(str(value[event]))
            window['output'].update('\n'.join(output))
        elif event == 'SEND':
            query = value['query'].rstrip()
            # EXECUTE YOUR COMMAND HERE
            #print('The command you entered was {}'.format(query))
            #nc.send(NetworkEvent.MESSAGE, {'from':'me', 'message':query})
            nc.sendMessage(query)
            command_history.append(query)
            history_offset = len(command_history) - 1
            # manually clear input because keyboard events blocks clear
            window['query'].update('')
            window['history'].update('\n'.join(command_history[-3:]))

        elif event in (sg.WIN_CLOSED, 'EXIT'):  # quit if exit event or X
            break

        elif 'Up' in event and len(command_history):
            command = command_history[history_offset]
            # decrement is not zero
            history_offset -= 1 * (history_offset > 0)
            window['query'].update(command)

        elif 'Down' in event and len(command_history):
            # increment up to end of list
            history_offset += 1 * (history_offset < len(command_history) - 1)
            command = command_history[history_offset]
            window['query'].update(command)

        elif 'Escape' in event:
            window['query'].update('')


ChatBotWithHistory()